name: Coverage Converter Actions

on:
  push:
    branches: workflows-test

jobs:
#   container:
#     runs-on: ubuntu-latest
#     container: google/dart:2.12.0-259.8.beta
  
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 1
#           ref: ${{ github.ref }}

#       - name: Get Dependencies
#         run: pub get
#         working-directory: metrics/coverage_converter/

#       - name: Build Project
#         if: github.event_name == 'push' && github.ref == 'refs/heads/workflows-test'
#         run: dart2native bin/main.dart -o ./coverage_converter_linux
#         working-directory: metrics/coverage_converter/

#       - name: Upload Artifact
#         if: github.event_name == 'push' && github.ref == 'refs/heads/workflows-test'
#         uses: actions/upload-artifact@v2
#         with:
#           name: coverage_converter_linux
#           path: metrics/coverage_converter/coverage_converter_linux
#           if-no-files-found: error

  release-actions:
    name: Coverage Converter Release Actions
    runs-on: ubuntu-latest
    timeout-minutes: 60
#     needs: [ container ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

#       - name: Install GitHub CLI
#         run: |
#           sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
#           sudo apt-add-repository https://cli.github.com/packages
#           sudo apt update
#           sudo apt install gh

#       - name: Configure GitHub CLI
#         run: gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}

#       - name: Download Linux Build
#         uses: actions/download-artifact@v2
#         with:
#           name: coverage_converter_linux
#           path: metrics/coverage_converter/

# #       - name: Delete release
# #         run: |
# #           gh release delete coverage-converter-snapshot -y
# #           git push --delete origin coverage-converter-snapshot

# #       - name: Create release
# #         run: gh release create coverage-converter-snapshot metrics/coverage_converter/coverage_converter_linux --prerelease --title 'Coverage converter snapshot'
      
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1
        
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
        
#       - name: Login to DockerHub
#         uses: docker/login-action@v1 
#         with:
#           username: ${{ secrets.REGISTRY_USERNAME }}
#           password: ${{ secrets.REGISTRY_TOKEN }}
        
      - name: Get current date
        id: date
        run: echo "name=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Set current date as env variable
        run: echo "DATE_YMD::$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          RELEASE_NAME: pre-release-${{ steps.date.outputs.date }}

      - name: Output Run ID
        run: echo ${{ github.run_id }}
      - name: Output Run Number
        run: echo ${{ github.run_number }}
      - name: Output tag
        run: echo $DATE_YMD-${{ github.run_number }}
#       - name: Build 
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           file: ./dockerfiles/testmnrp/dart-coverage/Dockerfile
#           platforms: linux/amd64,linux/arm64,linux/386
#           push: true
#           tags: |
#             ghcr.io/jdzsz/coverage_converter:latest

        
